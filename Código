#Código (Master-Mega)

const int numCores = 8;
const int numSlaves = 3;

int cores[numCores] = {1,2,3,4,5,6,7,8};
int coresSelecionadas[numSlaves];
int corCorreta = 0;
bool aguardandoAcerto = false;
int tentativasRestantes = 0;

void embaralharCores() {
  for (int i = numCores - 1; i > 0; i--) {
    int j = random(i + 1);
    int temp = cores[i];
    cores[i] = cores[j];
    cores[j] = temp;
  }
}

void setup() {
  Serial.begin(9600);     
  Serial1.begin(9600);    
  Serial2.begin(9600);    
  Serial3.begin(9600);    

  randomSeed(analogRead(0));
}

void loop() {
  if (!aguardandoAcerto) {
    embaralharCores();
    for (int i = 0; i < numSlaves; i++) {
      coresSelecionadas[i] = cores[i];
    }

    int indiceCorreta = random(numSlaves);
    corCorreta = coresSelecionadas[indiceCorreta];

    Serial1.write(coresSelecionadas[0]);
    Serial2.write(coresSelecionadas[1]);
    Serial3.write(coresSelecionadas[2]);

    Serial.println("Cores enviadas:");
    for (int i = 0; i < numSlaves; i++) {
      Serial.print("Slave ");
      Serial.print(i + 1);
      Serial.print(": Cor ");
      Serial.println(coresSelecionadas[i]);
    }

    Serial.print("Cor correta: ");
    Serial.println(corCorreta);

    // ✅ Envia comando para o Python
    Serial.print("COR:");
    Serial.println(corCorreta);

    tentativasRestantes = 2;
    aguardandoAcerto = true;

    Serial.print("Digite o número da cor correta. Você tem ");
    Serial.print(tentativasRestantes);
    Serial.println(" tentativas. Pressione ENTER após digitar:");
  }

  if (aguardandoAcerto && Serial.available()) {
    String input = Serial.readStringUntil('\n');
    input.trim();

    if (input.length() > 0) {
      int tentativa = input.toInt();
      Serial.print("Você digitou: ");
      Serial.println(tentativa);

      if (tentativa == corCorreta) {
        Serial.println("Parabéns, você acertou! :)");

        Serial1.write(0);
        Serial2.write(0);
        Serial3.write(0);

        aguardandoAcerto = false;
        delay(2000);
      } else {
        tentativasRestantes--;
        if (tentativasRestantes > 0) {
          Serial.print("Não foi dessa vez, mas continue tentando! :) Restam ");
          Serial.print(tentativasRestantes);
          Serial.println(" tentativa(s).");
        } else {
          Serial.println("Que pena! Suas tentativas acabaram. Reiniciando o jogo...");

          Serial1.write(0);
          Serial2.write(0);
          Serial3.write(0);

          aguardandoAcerto = false;
          delay(2000);
        }
      }
    }
  }
}



#Código (Slave-Unos)

#include <SoftwareSerial.h>

#define RX_PIN 10
#define TX_PIN 11

SoftwareSerial mySerial(RX_PIN, TX_PIN); // RX, TX

int corRecebida = 0;
bool travado = false;

void setup() {
  mySerial.begin(9600);
  Serial.begin(9600);
}

void loop() {
  if (mySerial.available() > 0) {
    int dado = mySerial.read();

    if (dado == 0) {
      // Comando de destravar
      travado = false;
      Serial.println("Destravado, aguardando nova cor...");
    } else if (!travado) {
      corRecebida = dado;
      travado = true;

      // Mostra a cor recebida
      Serial.print("Cor recebida e travada: ");
      Serial.println(corRecebida);

      // Aqui pode acionar um LED correspondente à cor
    }
  }

  // Se travado, pode manter o LED ligado ou fazer outra ação
}
